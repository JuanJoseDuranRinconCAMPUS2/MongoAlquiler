use("db_campus_alquiler");

db.createCollection("sucursal");
db.createCollection("automovil");
db.createCollection("sucursal_automovil");
db.createCollection("reserva");
db.createCollection("cliente");
db.createCollection("alquiler");
db.createCollection("registro_devolucion");
db.createCollection("registro_entrega");
db.createCollection("empleado");

// Inyeccion de data para la coleccion sucursal

use("db_campus_alquiler");
db.sucursal.insertOne({
    ID_sucursal: 1,
    Nombre: "Zona Franca",
    Dirrecion: "Florida",
    Telefono: 131312
});

// Inyeccion de data para la coleccion automovil

use("db_campus_alquiler");
db.automovil.insertOne({
    ID_Automovil: 2,
    Marca: "Toyota",
    Modelo: "Toyota Camry",
    Anio: 2023,
    Tipo: "	Turismo",
    Capacidad: 4,
    Precio_Diario: 25.00
});

// Inyeccion de data para la coleccion sucursal_automovil

use("db_campus_alquiler");
db.sucursal_automovil.insertOne({
    sucursal_id: 1,
    automovil_id: 2,
    Cantidad_Disponible: 4
});

// Inyeccion de data para la coleccion cliente

use("db_campus_alquiler");
db.cliente.insertOne({
    ID_Cliente: 2,
    Nombre: "Maria",
    Apellido: "Rodriguez",
    DNI: "343434",
    Direccion: "carreca 11 12-23",
    Telefono: "232312321",
    Email: "Maria@gmail.com"
});

// Inyeccion de data para la coleccion alquiler

use("db_campus_alquiler");
db.alquiler.insertOne({
    ID_Alquiler: 3,
    cliente_id: 2,
    automovil_id: 2,
    Fecha_Inicio: "11-05-2023",
    Fecha_Fin: "25-12-2023",
    Costo_Total: 200.00,
    Estado: "Excelente"
});

// Inyeccion de data para la coleccion reserva

use("db_campus_alquiler");
db.reserva.insertOne({
    ID_Reserva: 2,
    cliente_id: 2,
    automovil_id: 1,
    Fecha_Reserva: "07-04-2023",
    Fecha_Inicio: "09-05-2023",
    Fecha_Fin: "15-12-2023",
    Estado: "Pendiente"
});

// Inyeccion de data para la coleccion empleado

use("db_campus_alquiler");
db.empleado.insertOne({
    ID_Empleado: 2,
    Nombre: "Juan Jose",
    Apellido: "Rincon",
    DNI: "12344234",
    Direccion: "carreca 54 23-11",
    Telefono: "234231",
    Cargo: "Jefe"
});

// Inyeccion de data para la coleccion registro_entrega

use("db_campus_alquiler");
db.registro_entrega.insertOne({
    ID_Registro: 3,
    alquiler_id: 1,
    empleado_id: 2,
    Fecha_Entrega: "07-04-2023",
    Combustible_Entregado: 2.5,
    Kilometraje_Entregado: 5000
});

// Inyeccion de data para la coleccion registro_devolucion

use("db_campus_alquiler");
db.registro_devolucion.insertOne({
    ID_Registro: 3,
    alquiler_id: 1,
    empleado_id: 2,
    Fecha_Devolucion: "07-04-2023",
    Combustible_Devuelto: 2.5,
    Kilometraje_Devuelto: 1566,
    Monto_Adicional: 21.33
});





//Llamado de data segun las llaves foraneas

//Llamado de data de sucursal teniendo en cuenta su relacion con sucursal_automovil

use("db_campus_alquiler");
db.getCollection("sucursal").aggregate({
    $lookup:{
        from: "sucursal_automovil",
        localField: "ID_sucursal",
        foreignField: "sucursal_id",
        as: "Sucursal_Auto"
    }
});

//Llamado de data de automovil teniendo en cuenta su relacion con sucursal_automovil

use("db_campus_alquiler");
db.getCollection("automovil").aggregate({
    $lookup:{
        from: "sucursal_automovil",
        localField: "ID_Automovil",
        foreignField: "automovil_id",
        as: "Automovil_Suc"
    }
});

//Llamado de data de automovil teniendo en cuenta su relacion con alquiler

use("db_campus_alquiler");
db.getCollection("automovil").aggregate({
    $lookup:{
        from: "alquiler",
        localField: "ID_Automovil",
        foreignField: "automovil_id",
        as: "Alquileres"
    }
});

//Llamado de data de cliente teniendo en cuenta su relacion con alquiler

use("db_campus_alquiler");
db.getCollection("cliente").aggregate({
    $lookup:{
        from: "alquiler",
        localField: "ID_Cliente",
        foreignField: "cliente_id",
        as: "Alquileres"
    }
});

//Llamado de data de automovil teniendo en cuenta su relacion con reserva

use("db_campus_alquiler");
db.getCollection("automovil").aggregate({
    $lookup:{
        from: "reserva",
        localField: "ID_Automovil",
        foreignField: "automovil_id",
        as: "Reservas"
    }
});

//Llamado de data de cliente teniendo en cuenta su relacion con reserva

use("db_campus_alquiler");
db.getCollection("cliente").aggregate({
    $lookup:{
        from: "reserva",
        localField: "ID_Cliente",
        foreignField: "cliente_id",
        as: "Alquileres"
    }
});

//Llamado de data de empleado teniendo en cuenta su relacion con registro_entrega

use("db_campus_alquiler");
db.getCollection("empleado").aggregate({
    $lookup:{
        from: "registro_entrega",
        localField: "ID_Empleado",
        foreignField: "empleado_id",
        as: "Entregas"
    }
});

//Llamado de data de alquiler teniendo en cuenta su relacion con registro_entrega

use("db_campus_alquiler");
db.getCollection("alquiler").aggregate({
    $lookup:{
        from: "registro_entrega",
        localField: "ID_Alquiler",
        foreignField: "alquiler_id",
        as: "Entregas"
    }
});

//Llamado de data de empleado teniendo en cuenta su relacion con registro_devolucion

use("db_campus_alquiler");
db.getCollection("empleado").aggregate({
    $lookup:{
        from: "registro_devolucion",
        localField: "ID_Empleado",
        foreignField: "empleado_id",
        as: "Devoluciones"
    }
});

//Llamado de data de alquiler teniendo en cuenta su relacion con registro_devolucion

use("db_campus_alquiler");
db.getCollection("alquiler").aggregate({
    $lookup:{
        from: "registro_devolucion",
        localField: "ID_Alquiler",
        foreignField: "alquiler_id",
        as: "Devoluciones"
    }
});